{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Button/Button.module.scss","components/Modal/Modal.module.scss","App.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Loader/Spinner.module.scss","components/Api/Api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Spinner.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.scss"],"names":["module","exports","fetchQuery","searchQuery","page","fetch","then","res","json","Searchbar","state","value","handleInputChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","toggleModal","bigImg","src","alt","ImageGalleryItemImage","onClick","ImageGallery","query","map","el","largeImageURL","id","Button","Spinner","spinnerWrapper","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","closeModal","backDropClick","event","target","window","addEventListener","removeEventListener","createPortal","Overlay","modalImg","img","App","status","name","showModal","handleSubmitForm","LoadBtn","FindmodalImg","prevProps","prevState","Api","hits","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c57fa6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3rwv8\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1oX1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button-wrapper\":\"Button_Button-wrapper__1-EiH\",\"Button\":\"Button_Button__3e31n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3lTzU\",\"Modal\":\"Modal_Modal__1fxF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3zR5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__VztCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__KuLmE\"};","const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '24022420-d4b3a2f8f052f21486674bd5c';\r\n\r\nfunction fetchQuery(searchQuery, page) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(res => res.json());\r\n}\r\n\r\nexport default fetchQuery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.value);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleInputChange}\r\n            value={value}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.scss';\r\n\r\nfunction ImageGalleryItem({ webformatURL, tags, toggleModal, bigImg }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={() => {\r\n          toggleModal();\r\n          bigImg();\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  bigImg: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.scss';\r\n\r\nfunction ImageGallery({ query, toggleModal, bigImg }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {query.map(el => (\r\n        <ImageGalleryItem\r\n          key={el.id}\r\n          largeImageURL={el.largeImageURL}\r\n          webformatURL={el.webformatURL}\r\n          tags={el.tags}\r\n          toggleModal={() => toggleModal()}\r\n          bigImg={() => bigImg(el.id, el.largeImageURL, el.tags)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      tags: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n  bigImg: PropTypes.func.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.scss';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <div className={s['Button-wrapper']}>\r\n      <button className={s.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './Spinner.module.scss';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className={s.spinnerWrapper}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  backDropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.backDropClick}>\r\n        <div className={s.Modal}>\r\n          <img\r\n            src={this.props.modalImg.img}\r\n            alt={this.props.modalImg.tags}\r\n            key={this.props.modalImg.id}\r\n          />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  modalImg: PropTypes.object,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport Api from './components/Api/Api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button/Button';\nimport Spinner from './components/Loader/Spinner';\nimport Modal from './components/Modal';\n\nimport './App.module.scss';\n\nclass App extends Component {\n  state = {\n    status: 'idle',\n    query: [],\n    page: 1,\n    name: '',\n    showModal: false,\n    modalImg: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.name !== this.state.name) {\n      this.setState({ status: 'pending' });\n\n      Api(this.state.name, this.state.page)\n        .then(query => query.hits)\n        .then(query => this.setState({ query: query, status: 'resolved' }));\n    }\n\n    if (prevState.page !== this.state.page && this.state.page !== 1) {\n      this.setState({ status: 'pending' });\n\n      Api(this.state.name, this.state.page)\n        .then(query => query.hits)\n        .then(query =>\n          this.setState(prevState => ({\n            query: [...prevState.query, ...query],\n            status: 'resolved',\n          })),\n        );\n    }\n    if (prevState.query !== this.state.query) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleSubmitForm = value => {\n    this.setState({ name: value, page: 1 });\n  };\n\n  LoadBtn = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  FindmodalImg = (id, img, tags) => {\n    this.setState({ modalImg: { id: id, img: img, tags: tags } });\n  };\n\n  render() {\n    const { query, status, showModal, modalImg } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmitForm} />\n        {status === 'pending' && <Spinner />}\n        <ImageGallery\n          query={query}\n          toggleModal={this.toggleModal}\n          bigImg={this.FindmodalImg}\n        />\n        {status === 'resolved' && <Button onClick={this.LoadBtn} />}\n        {showModal && (\n          <Modal closeModal={this.toggleModal} modalImg={modalImg} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__38IlY\",\"SearchForm\":\"Searchbar_SearchForm__2iQeI\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1Ti5_\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__12YQR\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2DXKS\"};"],"sourceRoot":""}